[{"path":"https://epiforecasts.io/socialmixr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 socialmixr package authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"The socialmixr package","text":"heart socialmixr package contact_matrix() function. extracts contact matrix survey data. can use R help find usage contact_matrix() function, including list examples: POLYMOD data included package can loaded using example use generates contact matrix UK part POLYMOD study, age groups 0-1, 1-5, 5-15 15+ years. contains mean number contacts member age group (row) reported members another age group (column).","code":"?contact_matrix data(polymod) contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15)) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> $matrix #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.40000000 0.8000000 1.266667 5.933333 #>    [1,5)  0.11250000 1.9375000 1.462500 5.450000 #>    [5,15) 0.02450980 0.5049020 7.946078 6.215686 #>    15+    0.03230337 0.3581461 1.290730 9.594101 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"surveys","dir":"Articles","previous_headings":"","what":"Surveys","title":"The socialmixr package","text":"key argument contact_matrix() function survey supposed use. socialmixr package includes POLYMOD survey, used survey specified. also provides access surveys Social contact data community Zenodo. available surveys can listed (internet connection available) survey can downloaded using get_survey() command. get relevant data survey given Zenodo DOI (returned list_surveys()). relevant commands socialmixr package accept DOI, survey used repeatedly worth downloading storing locally avoid need network connection speed processing. way, peru data set can loaded future without need internet connection using surveys may contain data multiple countries. check , use survey_countries function one wishes get contact matrix one specific countries, countries argument can passed contact_matrix(). done, different surveys contained dataset combined one single sample (.e., applying population-weighting country correction). default, socialmixr uses POLYMOD survey. reference given survey can obtained using get_citation(), e.g.","code":"list_surveys() peru_survey <- get_survey(\"https://doi.org/10.5281/zenodo.1095664\") saveRDS(peru_survey, \"peru.rds\") peru_survey <- readRDS(\"peru.rds\") survey_countries(polymod) #> [1] \"Italy\"          \"Germany\"        \"Luxembourg\"     \"Netherlands\"    #> [5] \"Poland\"         \"United Kingdom\" \"Finland\"        \"Belgium\" get_citation(polymod) #> Mossong J, Hens N, Jit M, Beutels P, Auranen K, Mikolajczyk R, Massari #> M, Salmaso S, Tomba GS, Wallinga J, Heijne J, Sadkowska-Todys M, #> Rosinska M, Edmunds WJ (2017). \"POLYMOD social contact data.\" #> doi:10.5281/zenodo.1157934 <https://doi.org/10.5281/zenodo.1157934>, #> Version 1.1."},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"bootstrapping","dir":"Articles","previous_headings":"","what":"Bootstrapping","title":"The socialmixr package","text":"get idea uncertainty contact matrices, bootstrap can used using sample.participants argument contact_matrix(). argument set TRUE, participants sampled (replacement, get number participants original study) every time contact_matrix() function called, thus different matrix returned every time. matrices, derived quantities can obtained, example mean:","code":"m <- replicate(   n = 5,   contact_matrix(     polymod,     countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15),     sample.participants = TRUE   ) ) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. mr <- Reduce(\"+\", lapply(m[\"matrix\", ], function(x) x / ncol(m))) mr #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.12619048 0.9220879 1.397216 5.362088 #>    [1,5)  0.11038925 2.1722236 1.478357 5.529785 #>    [5,15) 0.02542806 0.5016377 7.634662 6.086969 #>    15+    0.03024146 0.3550540 1.277747 9.583792"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"demography","dir":"Articles","previous_headings":"","what":"Demography","title":"The socialmixr package","text":"Obtaining symmetric contact matrices, splitting components (see ) age-specific participant weights require information underlying demographic composition survey population. can passed contact_matrix() survey.pop argument, data.frame two columns, lower.age.limit (denoting lower end age groups) population (denoting number people age group). survey.pop given, contact_matrix() try obtain age structure population (per countries argument) World Population Prospects United Nations, using estimates year closest matches year contact survey conducted. demographic information used, returned contact_matrix() demography field results list. possible enforce prevent function return demography data using return.demography option.","code":"contact_matrix(polymod,   countries = \"United Kingdom\", age.limits = c(0, 20),   return.demography = TRUE )$demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,20)   14799290  0.2454816  2005 #> 2:       20+   45487461  0.7545184  2005"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"symmetric-contact-matrices","dir":"Articles","previous_headings":"","what":"Symmetric contact matrices","title":"The socialmixr package","text":"Conceivably, contact matrices symmetric: total number contacts made members one age group another vice versa. Mathematically, mijm_{ij} mean number contacts made members age group ii members age group jj, total number people age group ii NiN_i, mijNi=mjiNjm_{ij} N_i = m_{ji}N_j variation sample contact matrix obtained, relationship usually fulfilled exactly. order obtain symmetric contact matrix fulfills , one can use m′ij=12Ni(mijNi+mjiNj)m'_{ij} = \\frac{1}{2N_i} (m_{ij} N_i + m_{ji} N_j) get version contact matrix, use symmetric = TRUE calling contact_matrix() function.","code":"contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15), symmetric = TRUE) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Warning: Not all age groups represented in population data (5-year age band). #> ℹ Linearly estimating age group sizes from the 5-year bands. #> Warning: Large differences in the size of the sub-populations with the current age #> breaks are likely to result in artefacts after making the matrix symmetric. #> ℹ Please reconsider the age breaks to obtain more equally sized #>   sub-populations. #> ℹ Normalization factors: [0.3 and 2.9] #> $matrix #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.40000000 0.6250000 0.764365 4.122919 #>    [1,5)  0.15625000 1.9375000 1.406063 5.929829 #>    [5,15) 0.07148821 0.5260153 7.946078 7.428739 #>    15+    0.05759306 0.3313352 1.109550 9.594101 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:     [0,1)     690734 0.01145748  2005 #> 2:     [1,5)    2762936 0.04582990  2005 #> 3:    [5,15)    7385454 0.12250542  2005 #> 4:       15+   49447627 0.82020720  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"contact-rates-per-capita","dir":"Articles","previous_headings":"","what":"Contact rates per capita","title":"The socialmixr package","text":"contact matrix per capita cijc_{ij} contains social contact rates one individual age ii one individual age jj, given population details. example, cijc_{ij} used infectious disease modelling calculate force infection, based likelihood one susceptible individual age ii contact one infectious individual age jj. contact rates per capita calculated follows: cij=mijNjc_{ij} =  \\tfrac{m_{ij}}{N_{j}} get per capita contact matrix, use per.capita = TRUE calling contact_matrix() function. Please note option symmetric = TRUE specified, contact matrix mijm_{ij} can show asymmetry sub-population sizes different, contact matrix per capita fully symmetric: c′ij=mijNi+mjiNj2NiNj=c′jic'_{ij} = \\frac{m_{ij} N_i + m_{ji} N_j}{2N_iN_j} = c'_{ji}","code":"contact_matrix(survey = polymod, countries = \"Germany\", age.limits = c(0, 60), symmetric = TRUE, per.capita = TRUE) #> $matrix #>          contact.age.group #> age.group   [0,60)       60+ #>    [0,60) 7.743879 0.8967442 #>    60+    2.711694 2.1267606 #>  #> $matrix.per.capita #>          contact.age.group #> age.group       [0,60)          60+ #>    [0,60) 1.261735e-07 4.418248e-08 #>    60+    4.418248e-08 1.047852e-07 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,60)   61374868  0.7514869  2005 #> 2:       60+   20296375  0.2485131  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,60)         1062  0.8329412 #> 2:       60+          213  0.1670588"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"splitting-contact-matrices","dir":"Articles","previous_headings":"","what":"Splitting contact matrices","title":"The socialmixr package","text":"contact_matrix() contains simple model elements contact matrix, split global component, well three components representing contacts, assortativity demography. words, elements mijm_{ij} contact matrix modeled mij=cqdiaijnj m_{ij} = c q d_i a_{ij} n_j cc mean number contacts across whole population, cqdic q d_i number contacts member group ii makes across age groups, njn_j proportion surveyed population age group jj. constant qq set cqc q equal value largest eigenvalue mijm_{ij}; used infectious disease model assumed every contact leads infection, cqc q can replaced basic reproduction number R0R_0. model contact matrix way contact_matrix() function, set split = TRUE. components matrix returned elements mean.contacts (cc), normalisation (qq), contacts (did_i), matrix (aija_{ij}) demography (njn_j) resulting list.","code":"contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15), split = TRUE) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Warning: Not all age groups represented in population data (5-year age band). #> ℹ Linearly estimating age group sizes from the 5-year bands. #> $mean.contacts #> [1] 11.55481 #>  #> $normalisation #> [1] 1.039163 #>  #> $contacts #> [1] 0.6995727 0.7464190 1.2235173 0.9390331 #>  #> $matrix #>          contact.age.group #> age.group     [0,1)     [1,5)   [5,15)       15+ #>    [0,1)  4.1561551 2.0780776 1.230914 0.8611839 #>    [1,5)  1.0955555 4.7169752 1.332022 0.7413849 #>    [5,15) 0.1456110 0.7498969 4.415104 0.5158328 #>    15+    0.2500527 0.6930808 0.934443 1.0374170 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:     [0,1)     690734 0.01145748  2005 #> 2:     [1,5)    2762936 0.04582990  2005 #> 3:    [5,15)    7385454 0.12250542  2005 #> 4:       15+   49447627 0.82020720  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"The socialmixr package","text":"filter argument contact_matrix() can used select particular participants contacts. example, polymod dataset, indicators cnt_home, cnt_work, cnt_school, cnt_transport, cnt_leisure cnt_otherplace take value 0 1 depending contact occurred. filter can applied data, given list form (column=filter_value). , contacts ‘filter_value’ ‘column’ considered generated contact matrix:","code":"# contact matrix for school-related contacts contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_school = 1))$matrix #>          contact.age.group #> age.group     [0,20)    [20,60)        60+ #>   [0,20)  5.17103805 1.09641670 0.03583303 #>   [20,60) 0.45714286 0.47542857 0.01457143 #>   60+     0.08980827 0.07366297 0.03531786  # contact matrix for work-related contacts involving physical contact contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_work = 1, phys_contact = 1))$matrix #>          contact.age.group #> age.group     [0,20)    [20,60)         60+ #>   [0,20)  0.04285187 0.06353897 0.009235316 #>   [20,60) 0.16057143 1.27000000 0.146285714 #>   60+     0.04238143 0.29465187 0.062563068  # contact matrix for daily contacts at home with males contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_home = 1, cnt_gender = \"M\", duration_multi = 5))$matrix #>          contact.age.group #> age.group     [0,20)   [20,60)        60+ #>   [0,20)  0.39268563 0.5858884 0.03103066 #>   [20,60) 0.25971429 0.3948571 0.04885714 #>   60+     0.05751766 0.1160444 0.23915237"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"participant-weights","dir":"Articles","previous_headings":"","what":"Participant weights","title":"The socialmixr package","text":"Participant weights commonly used align sample population characteristics terms temporal aspects age distribution. example, day week reported driving factor social contact behavior, hence obtain weekly average, survey data represent weekly 2/5 distribution weekend/week days. align survey data distribution, one can obtain participant weights form : wday..week=5/7Nweekday/N 2/7Nweekend/Nw_{\\textrm{day..week}} = \\tfrac{5/7}{N_{\\textrm{weekday}}/N} \\text{    } \\tfrac{2/7}{N_{\\textrm{weekend}}/N} sample size NN, NweekdayN_{weekday} NweekendN_{weekend} number participants surveyed weekdays weekend days, respectively. possible remove constant values (e.g. w=5/Nweekdayw = 5/N_{weekday}), results standardized weights. However, opt use relative proportions calculate weights enable truncation generic threshold (see ). Another driver social contact patterns age. improve representativeness survey data, age-specific weights can calculated : wage=Pa/PNa/Nw_{age} = \\tfrac{P_{}\\ /\\ P}{N_{}\\ /\\ N} PP population size, PaP_a population fraction age aa, NN survey sample size NaN_a survey fraction age aa. combination age-specific temporal weights participant ii age aa can constructed : wi=wage*wday..weekw_{} = w_{\\textrm{age}} * w_{\\textrm{day..week}}  Finally, weights can standardized follows: w̃=wi∑w*N\\tilde{w}_{} =  \\tfrac{w_{}}{\\sum_{}^{} w_{}} * N social contact analysis based stratification splitting population non-overlapping groups, requires weights standardized weighted totals within mutually exclusive cells equal known population totals [@kolenikov_post-stratification_2016]. post-stratification cells need mutually exclusive cover whole population. post-stratified (PS) weight participant ii : w̃iPS=wi∑jgroup gwj*Ng\\tilde{w}^{PS}_{} =  \\tfrac{w_{}}{\\sum_{\\text{j}}^{\\text{group g}} w_{j}} * N_g Temporal weights activated contact_matrix() weigh.dayofweek = TRUE age-specific weights weight.age = TRUE. post-stratification weights calculated default. possible obtain participant weights via option return.part.weights = TRUE. contact_matrix() allows specify use participant weights. Therefore, provide names columns participant data want use weight reported contacts via weights argument. survey population differs extensively demography, participants can end relatively high weights , excessive contribution population average. warrants limitation single participant influences truncation weights. enable contact_matrix(), need provide numeric weight.threshold. truncation applied standardized weights, followed another standardization make sure sum weights still equals sample size. latter can lead final weights little exceed given threshold value. numeric examples, show importance post-stratification weights contrast using crude weights directly within age-groups. apply weights age day week separately examples, though combination straightforward via multiplication. start survey including 6 participants 1, 2 3 years age. ages equally represented sample, though assume equally present reference population. calculate weighted average number contacts age age group, using {1,2} {3} years age. following table shows reported number contacts per participant ii, represented mim_i: summary statistics sample (N) reference population (P) follows survey data results unweighted average number contacts: age-specific unweighted averages number contacts: following table contains participants weights based survey day without population sample size constants (ww w′w', respectively). Note standardized weights w̃\\tilde{w} w′̃\\tilde{w'} : Note different scale ww w′w', straightforward interpretation numerical value ww terms relative differences apply truncation. Using standardized weights, able calculate weighted number contacts: population-based weights directly used age-specific groups, contact behavior 3 year-old participant, participated week day, inflated due -representation week days survey sample. addition, number contacts 1 year-old participants decreased -representation weekend days survey. Using population-weights within two aggregated age groups, obtain intuitive weighting age group , still skewed individuals age group B. , weighted average age group B meaning terms social contact behavior: subdivide population, need use post-stratification weights (“w_PS”) weighted totals within mutually exclusive cells equal sample size. age groups, goes follows: weighted means equal: repeated example calculating age-specific participant weights population age-group level: age-specific weights directly used within age groups, contact behavior age group B inflated unrealistic levels number contacts age group artificially low: Using post-stratification weights, end : start survey data 14 participants 1, 2 3 years age, sampled population ages equally present. Given high representation participants aged 1 year, age-specific proportions skewed comparison reference population. calculate age-specific weights (un)weighted average number contacts, end : single participant 3 years age large influence weighted population average. , propose truncate relative age-specific weights ww 3. , weighted population average equals:","code":"contact_matrix(   survey = polymod, age.limits = c(0, 18, 60), weigh.dayofweek = TRUE,   weigh.age = TRUE, return.part.weights = TRUE ) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.5152158  5.839458 0.7193179 #>   [18,60) 2.0433998 10.318853 1.2413142 #>   60+     0.7761051  4.354554 2.4995467 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,18)   52955807  0.1948624  2005 #> 2:   [18,60)  157719526  0.5803634  2005 #> 3:       60+   61084635  0.2247742  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 #>  #> $participants.weights #>      age.group participant.age is.weekday    weight participants   proportion #>         <fctr>           <int>     <lgcl>     <num>        <int>        <num> #>   1:    [0,18)               0      FALSE 1.4566422           27 0.0037510420 #>   2:    [0,18)               0       TRUE 1.3087772           66 0.0091692137 #>   3:    [0,18)               1      FALSE 1.1288977           32 0.0044456794 #>   4:    [0,18)               1       TRUE 1.0143024           88 0.0122256182 #>   5:    [0,18)               2      FALSE 0.9473268           39 0.0054181717 #>  ---                                                                          #> 167:       60+              83       TRUE 5.6502663            4 0.0005557099 #> 168:       60+              84      FALSE 8.3848408            1 0.0001389275 #> 169:       60+              84       TRUE 7.5336884            2 0.0002778550 #> 170:       60+              85       TRUE 3.1671409            3 0.0004167824 #> 171:       60+              90       TRUE 4.7540746            1 0.0001389275 # e.g. use household size as (dummy) weight to provide more importance to participant data from large households contact_matrix(survey = polymod, age.limits = c(0, 18, 60), weights = \"hh_size\") #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.9599558  5.907367 0.7338418 #>   [18,60) 2.4650353 10.960550 1.2399199 #>   60+     0.9909593  5.659468 2.7081868 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 contact_matrix(   survey = polymod, age.limits = c(0, 18, 60), weigh.dayofweek = TRUE,   weigh.age = TRUE, return.part.weights = TRUE, weight.threshold = 3 ) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.5152158  5.839458 0.7193179 #>   [18,60) 2.0433998 10.318853 1.2413142 #>   60+     0.7720958  4.410151 2.5401091 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,18)   52955807  0.1948624  2005 #> 2:   [18,60)  157719526  0.5803634  2005 #> 3:       60+   61084635  0.2247742  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 #>  #> $participants.weights #>      age.group participant.age is.weekday    weight participants   proportion #>         <fctr>           <int>     <lgcl>     <num>        <int>        <num> #>   1:    [0,18)               0      FALSE 1.4566422           27 0.0037510420 #>   2:    [0,18)               0       TRUE 1.3087772           66 0.0091692137 #>   3:    [0,18)               1      FALSE 1.1288977           32 0.0044456794 #>   4:    [0,18)               1       TRUE 1.0143024           88 0.0122256182 #>   5:    [0,18)               2      FALSE 0.9473268           39 0.0054181717 #>  ---                                                                          #> 167:       60+              83       TRUE 3.1063091            4 0.0005557099 #> 168:       60+              84      FALSE 3.1063091            1 0.0001389275 #> 169:       60+              84       TRUE 3.1063091            2 0.0002778550 #> 170:       60+              85       TRUE 3.1063091            3 0.0004167824 #> 171:       60+              90       TRUE 3.1063091            1 0.0001389275 N <- 6 N_age <- c(2, 3, 1) N_age.group <- c(5, 1) N_day.of.week <- c(3, 3)  P <- 3000 P_age <- c(1000, 1000, 1000) P_age.group <- c(2000, 1000)  P_day.of.week <- c(5 / 7, 2 / 7) * 3000 #> [1] \"unweighted average number of contacts: 7.83\" #> [1] \"weighted average number of contacts: 9.2\" #> [1] \"weighted average number of contacts: 8.85\" #> [1] \"unweighted average number of contacts: 5.86\" #> [1] \"weighted average number of contacts: 13.86\" #> [1] \"weighted average number of contacts after truncation: 10.28\""},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"temporal-aspects-and-demography","dir":"Articles","previous_headings":"","what":"Temporal aspects and demography","title":"The socialmixr package","text":"Participant weights commonly used align sample population characteristics terms temporal aspects age distribution. example, day week reported driving factor social contact behavior, hence obtain weekly average, survey data represent weekly 2/5 distribution weekend/week days. align survey data distribution, one can obtain participant weights form : wday..week=5/7Nweekday/N 2/7Nweekend/Nw_{\\textrm{day..week}} = \\tfrac{5/7}{N_{\\textrm{weekday}}/N} \\text{    } \\tfrac{2/7}{N_{\\textrm{weekend}}/N} sample size NN, NweekdayN_{weekday} NweekendN_{weekend} number participants surveyed weekdays weekend days, respectively. possible remove constant values (e.g. w=5/Nweekdayw = 5/N_{weekday}), results standardized weights. However, opt use relative proportions calculate weights enable truncation generic threshold (see ). Another driver social contact patterns age. improve representativeness survey data, age-specific weights can calculated : wage=Pa/PNa/Nw_{age} = \\tfrac{P_{}\\ /\\ P}{N_{}\\ /\\ N} PP population size, PaP_a population fraction age aa, NN survey sample size NaN_a survey fraction age aa. combination age-specific temporal weights participant ii age aa can constructed : wi=wage*wday..weekw_{} = w_{\\textrm{age}} * w_{\\textrm{day..week}}  Finally, weights can standardized follows: w̃=wi∑w*N\\tilde{w}_{} =  \\tfrac{w_{}}{\\sum_{}^{} w_{}} * N social contact analysis based stratification splitting population non-overlapping groups, requires weights standardized weighted totals within mutually exclusive cells equal known population totals [@kolenikov_post-stratification_2016]. post-stratification cells need mutually exclusive cover whole population. post-stratified (PS) weight participant ii : w̃iPS=wi∑jgroup gwj*Ng\\tilde{w}^{PS}_{} =  \\tfrac{w_{}}{\\sum_{\\text{j}}^{\\text{group g}} w_{j}} * N_g Temporal weights activated contact_matrix() weigh.dayofweek = TRUE age-specific weights weight.age = TRUE. post-stratification weights calculated default. possible obtain participant weights via option return.part.weights = TRUE.","code":"contact_matrix(   survey = polymod, age.limits = c(0, 18, 60), weigh.dayofweek = TRUE,   weigh.age = TRUE, return.part.weights = TRUE ) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.5152158  5.839458 0.7193179 #>   [18,60) 2.0433998 10.318853 1.2413142 #>   60+     0.7761051  4.354554 2.4995467 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,18)   52955807  0.1948624  2005 #> 2:   [18,60)  157719526  0.5803634  2005 #> 3:       60+   61084635  0.2247742  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 #>  #> $participants.weights #>      age.group participant.age is.weekday    weight participants   proportion #>         <fctr>           <int>     <lgcl>     <num>        <int>        <num> #>   1:    [0,18)               0      FALSE 1.4566422           27 0.0037510420 #>   2:    [0,18)               0       TRUE 1.3087772           66 0.0091692137 #>   3:    [0,18)               1      FALSE 1.1288977           32 0.0044456794 #>   4:    [0,18)               1       TRUE 1.0143024           88 0.0122256182 #>   5:    [0,18)               2      FALSE 0.9473268           39 0.0054181717 #>  ---                                                                          #> 167:       60+              83       TRUE 5.6502663            4 0.0005557099 #> 168:       60+              84      FALSE 8.3848408            1 0.0001389275 #> 169:       60+              84       TRUE 7.5336884            2 0.0002778550 #> 170:       60+              85       TRUE 3.1671409            3 0.0004167824 #> 171:       60+              90       TRUE 4.7540746            1 0.0001389275"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"user-defined-participant-weights","dir":"Articles","previous_headings":"","what":"User-defined participant weights","title":"The socialmixr package","text":"contact_matrix() allows specify use participant weights. Therefore, provide names columns participant data want use weight reported contacts via weights argument.","code":"# e.g. use household size as (dummy) weight to provide more importance to participant data from large households contact_matrix(survey = polymod, age.limits = c(0, 18, 60), weights = \"hh_size\") #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.9599558  5.907367 0.7338418 #>   [18,60) 2.4650353 10.960550 1.2399199 #>   60+     0.9909593  5.659468 2.7081868 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"weight-threshold","dir":"Articles","previous_headings":"","what":"Weight threshold","title":"The socialmixr package","text":"survey population differs extensively demography, participants can end relatively high weights , excessive contribution population average. warrants limitation single participant influences truncation weights. enable contact_matrix(), need provide numeric weight.threshold. truncation applied standardized weights, followed another standardization make sure sum weights still equals sample size. latter can lead final weights little exceed given threshold value.","code":"contact_matrix(   survey = polymod, age.limits = c(0, 18, 60), weigh.dayofweek = TRUE,   weigh.age = TRUE, return.part.weights = TRUE, weight.threshold = 3 ) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.5152158  5.839458 0.7193179 #>   [18,60) 2.0433998 10.318853 1.2413142 #>   60+     0.7720958  4.410151 2.5401091 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,18)   52955807  0.1948624  2005 #> 2:   [18,60)  157719526  0.5803634  2005 #> 3:       60+   61084635  0.2247742  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 #>  #> $participants.weights #>      age.group participant.age is.weekday    weight participants   proportion #>         <fctr>           <int>     <lgcl>     <num>        <int>        <num> #>   1:    [0,18)               0      FALSE 1.4566422           27 0.0037510420 #>   2:    [0,18)               0       TRUE 1.3087772           66 0.0091692137 #>   3:    [0,18)               1      FALSE 1.1288977           32 0.0044456794 #>   4:    [0,18)               1       TRUE 1.0143024           88 0.0122256182 #>   5:    [0,18)               2      FALSE 0.9473268           39 0.0054181717 #>  ---                                                                          #> 167:       60+              83       TRUE 3.1063091            4 0.0005557099 #> 168:       60+              84      FALSE 3.1063091            1 0.0001389275 #> 169:       60+              84       TRUE 3.1063091            2 0.0002778550 #> 170:       60+              85       TRUE 3.1063091            3 0.0004167824 #> 171:       60+              90       TRUE 3.1063091            1 0.0001389275"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"numerical-example","dir":"Articles","previous_headings":"","what":"Numerical example","title":"The socialmixr package","text":"numeric examples, show importance post-stratification weights contrast using crude weights directly within age-groups. apply weights age day week separately examples, though combination straightforward via multiplication. start survey including 6 participants 1, 2 3 years age. ages equally represented sample, though assume equally present reference population. calculate weighted average number contacts age age group, using {1,2} {3} years age. following table shows reported number contacts per participant ii, represented mim_i: summary statistics sample (N) reference population (P) follows survey data results unweighted average number contacts: age-specific unweighted averages number contacts: following table contains participants weights based survey day without population sample size constants (ww w′w', respectively). Note standardized weights w̃\\tilde{w} w′̃\\tilde{w'} : Note different scale ww w′w', straightforward interpretation numerical value ww terms relative differences apply truncation. Using standardized weights, able calculate weighted number contacts: population-based weights directly used age-specific groups, contact behavior 3 year-old participant, participated week day, inflated due -representation week days survey sample. addition, number contacts 1 year-old participants decreased -representation weekend days survey. Using population-weights within two aggregated age groups, obtain intuitive weighting age group , still skewed individuals age group B. , weighted average age group B meaning terms social contact behavior: subdivide population, need use post-stratification weights (“w_PS”) weighted totals within mutually exclusive cells equal sample size. age groups, goes follows: weighted means equal: repeated example calculating age-specific participant weights population age-group level: age-specific weights directly used within age groups, contact behavior age group B inflated unrealistic levels number contacts age group artificially low: Using post-stratification weights, end : start survey data 14 participants 1, 2 3 years age, sampled population ages equally present. Given high representation participants aged 1 year, age-specific proportions skewed comparison reference population. calculate age-specific weights (un)weighted average number contacts, end : single participant 3 years age large influence weighted population average. , propose truncate relative age-specific weights ww 3. , weighted population average equals:","code":"N <- 6 N_age <- c(2, 3, 1) N_age.group <- c(5, 1) N_day.of.week <- c(3, 3)  P <- 3000 P_age <- c(1000, 1000, 1000) P_age.group <- c(2000, 1000)  P_day.of.week <- c(5 / 7, 2 / 7) * 3000 #> [1] \"unweighted average number of contacts: 7.83\" #> [1] \"weighted average number of contacts: 9.2\" #> [1] \"weighted average number of contacts: 8.85\" #> [1] \"unweighted average number of contacts: 5.86\" #> [1] \"weighted average number of contacts: 13.86\" #> [1] \"weighted average number of contacts after truncation: 10.28\""},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"get-survey-data","dir":"Articles","previous_headings":"Participant weights","what":"Get survey data","title":"The socialmixr package","text":"start survey including 6 participants 1, 2 3 years age. ages equally represented sample, though assume equally present reference population. calculate weighted average number contacts age age group, using {1,2} {3} years age. following table shows reported number contacts per participant ii, represented mim_i: summary statistics sample (N) reference population (P) follows survey data results unweighted average number contacts: age-specific unweighted averages number contacts:","code":"N <- 6 N_age <- c(2, 3, 1) N_age.group <- c(5, 1) N_day.of.week <- c(3, 3)  P <- 3000 P_age <- c(1000, 1000, 1000) P_age.group <- c(2000, 1000)  P_day.of.week <- c(5 / 7, 2 / 7) * 3000 #> [1] \"unweighted average number of contacts: 7.83\""},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"weight-by-day-of-week","dir":"Articles","previous_headings":"Participant weights","what":"Weight by day of week","title":"The socialmixr package","text":"following table contains participants weights based survey day without population sample size constants (ww w′w', respectively). Note standardized weights w̃\\tilde{w} w′̃\\tilde{w'} : Note different scale ww w′w', straightforward interpretation numerical value ww terms relative differences apply truncation. Using standardized weights, able calculate weighted number contacts: population-based weights directly used age-specific groups, contact behavior 3 year-old participant, participated week day, inflated due -representation week days survey sample. addition, number contacts 1 year-old participants decreased -representation weekend days survey. Using population-weights within two aggregated age groups, obtain intuitive weighting age group , still skewed individuals age group B. , weighted average age group B meaning terms social contact behavior: subdivide population, need use post-stratification weights (“w_PS”) weighted totals within mutually exclusive cells equal sample size. age groups, goes follows: weighted means equal:","code":"#> [1] \"weighted average number of contacts: 9.2\""},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"weight-by-age","dir":"Articles","previous_headings":"Participant weights","what":"Weight by age","title":"The socialmixr package","text":"repeated example calculating age-specific participant weights population age-group level: age-specific weights directly used within age groups, contact behavior age group B inflated unrealistic levels number contacts age group artificially low: Using post-stratification weights, end :","code":"#> [1] \"weighted average number of contacts: 8.85\""},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"apply-threshold","dir":"Articles","previous_headings":"Participant weights","what":"Apply threshold","title":"The socialmixr package","text":"start survey data 14 participants 1, 2 3 years age, sampled population ages equally present. Given high representation participants aged 1 year, age-specific proportions skewed comparison reference population. calculate age-specific weights (un)weighted average number contacts, end : single participant 3 years age large influence weighted population average. , propose truncate relative age-specific weights ww 3. , weighted population average equals:","code":"#> [1] \"unweighted average number of contacts: 5.86\" #> [1] \"weighted average number of contacts: 13.86\" #> [1] \"weighted average number of contacts after truncation: 10.28\""},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"The socialmixr package","text":"contact matrices can plotted using geom_tile() function ggplot2 package.  contact matrices can also plotted matrix_plot() function grid colored rectangles numeric values cells. Heat colors used default, though can changed.","code":"df <- reshape2::melt(mr, varnames = c(\"age.group\", \"age.group.contact\"), value.name = \"contacts\") ggplot(df, aes(x = age.group, y = age.group.contact, fill = contacts)) +   theme(legend.position = \"bottom\") +   geom_tile() matrix_plot(mr) matrix_plot(mr, color.palette = gray.colors)"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"using-ggplot2","dir":"Articles","previous_headings":"","what":"Using ggplot2","title":"The socialmixr package","text":"contact matrices can plotted using geom_tile() function ggplot2 package.","code":"df <- reshape2::melt(mr, varnames = c(\"age.group\", \"age.group.contact\"), value.name = \"contacts\") ggplot(df, aes(x = age.group, y = age.group.contact, fill = contacts)) +   theme(legend.position = \"bottom\") +   geom_tile()"},{"path":"https://epiforecasts.io/socialmixr/articles/intro.html","id":"using-r-base","dir":"Articles","previous_headings":"","what":"Using R base","title":"The socialmixr package","text":"contact matrices can also plotted matrix_plot() function grid colored rectangles numeric values cells. Heat colors used default, though can changed.","code":"matrix_plot(mr) matrix_plot(mr, color.palette = gray.colors)"},{"path":[]},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to socialmixr","text":"heart socialmixr package contact_matrix() function. extracts contact matrix survey data. can use R help find usage contact_matrix() function, including list examples: POLYMOD data included package can loaded using example use generates contact matrix UK part POLYMOD study, age groups 0-1, 1-5, 5-15 15+ years. contains mean number contacts member age group (row) reported members another age group (column).","code":"?contact_matrix data(polymod) contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15)) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> $matrix #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.40000000 0.8000000 1.266667 5.933333 #>    [1,5)  0.11250000 1.9375000 1.462500 5.450000 #>    [5,15) 0.02450980 0.5049020 7.946078 6.215686 #>    15+    0.03230337 0.3581461 1.290730 9.594101 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"surveys","dir":"Articles","previous_headings":"","what":"Surveys","title":"Introduction to socialmixr","text":"key argument contact_matrix() function survey supposed use. socialmixr package includes POLYMOD survey, used survey specified. also provides access surveys Social contact data community Zenodo. available surveys can listed (internet connection available) survey can downloaded using get_survey() command. get relevant data survey given Zenodo DOI (returned list_surveys()). relevant commands socialmixr package accept DOI, survey used repeatedly worth downloading storing locally avoid need network connection speed processing. way, peru data set can loaded future without need internet connection using surveys may contain data multiple countries. check , use survey_countries function one wishes get contact matrix one specific countries, countries argument can passed contact_matrix(). done, different surveys contained dataset combined one single sample (.e., applying population-weighting country correction). default, socialmixr uses POLYMOD survey. reference given survey can obtained using get_citation(), e.g.","code":"list_surveys() peru_survey <- get_survey(\"https://doi.org/10.5281/zenodo.1095664\") saveRDS(peru_survey, \"peru.rds\") peru_survey <- readRDS(\"peru.rds\") survey_countries(polymod) #> [1] \"Italy\"          \"Germany\"        \"Luxembourg\"     \"Netherlands\"    #> [5] \"Poland\"         \"United Kingdom\" \"Finland\"        \"Belgium\" get_citation(polymod) #> Mossong J, Hens N, Jit M, Beutels P, Auranen K, Mikolajczyk R, Massari #> M, Salmaso S, Tomba GS, Wallinga J, Heijne J, Sadkowska-Todys M, #> Rosinska M, Edmunds WJ (2017). \"POLYMOD social contact data.\" #> doi:10.5281/zenodo.1157934 <https://doi.org/10.5281/zenodo.1157934>, #> Version 1.1."},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"bootstrapping","dir":"Articles","previous_headings":"","what":"Bootstrapping","title":"Introduction to socialmixr","text":"get idea uncertainty contact matrices, bootstrap can used using sample.participants argument contact_matrix(). argument set TRUE, participants sampled (replacement, get number participants original study) every time contact_matrix() function called, thus different matrix returned every time. matrices, derived quantities can obtained, example mean:","code":"m <- replicate(   n = 5,   contact_matrix(     polymod,     countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15),     sample.participants = TRUE   ) ) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. mr <- Reduce(\"+\", lapply(m[\"matrix\", ], function(x) x / ncol(m))) mr #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.37833333 0.9333333 1.125000 5.988333 #>    [1,5)  0.12339843 2.0356420 1.495745 5.413850 #>    [5,15) 0.02636051 0.4872067 7.978738 6.294043 #>    15+    0.03875607 0.3657082 1.381436 9.651792"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"demography","dir":"Articles","previous_headings":"","what":"Demography","title":"Introduction to socialmixr","text":"Obtaining symmetric contact matrices, splitting components (see ) age-specific participant weights require information underlying demographic composition survey population. can passed contact_matrix() survey.pop argument, data.frame two columns, lower.age.limit (denoting lower end age groups) population (denoting number people age group). survey.pop given, contact_matrix() try obtain age structure population (per countries argument) World Population Prospects United Nations, using estimates year closest matches year contact survey conducted. demographic information used, returned contact_matrix() demography field results list. possible enforce prevent function return demography data using return.demography option.","code":"contact_matrix(polymod,   countries = \"United Kingdom\", age.limits = c(0, 20),   return.demography = TRUE )$demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,20)   14799290  0.2454816  2005 #> 2:       20+   45487461  0.7545184  2005"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"symmetric-contact-matrices","dir":"Articles","previous_headings":"","what":"Symmetric contact matrices","title":"Introduction to socialmixr","text":"Conceivably, contact matrices symmetric: total number contacts made members one age group another vice versa. Mathematically, mijm_{ij} mean number contacts made members age group ii members age group jj, total number people age group ii NiN_i, mijNi=mjiNjm_{ij} N_i = m_{ji}N_j variation sample contact matrix obtained, relationship usually fulfilled exactly. order obtain symmetric contact matrix fulfills , one can use m′ij=12Ni(mijNi+mjiNj)m'_{ij} = \\frac{1}{2N_i} (m_{ij} N_i + m_{ji} N_j) get version contact matrix, use symmetric = TRUE calling contact_matrix() function.","code":"contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15), symmetric = TRUE) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Warning: Not all age groups represented in population data (5-year age band). #> ℹ Linearly estimating age group sizes from the 5-year bands. #> Warning: Large differences in the size of the sub-populations with the current age #> breaks are likely to result in artefacts after making the matrix symmetric. #> ℹ Please reconsider the age breaks to obtain more equally sized #>   sub-populations. #> ℹ Normalization factors: [0.3 and 2.9] #> $matrix #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.40000000 0.6250000 0.764365 4.122919 #>    [1,5)  0.15625000 1.9375000 1.406063 5.929829 #>    [5,15) 0.07148821 0.5260153 7.946078 7.428739 #>    15+    0.05759306 0.3313352 1.109550 9.594101 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:     [0,1)     690734 0.01145748  2005 #> 2:     [1,5)    2762936 0.04582990  2005 #> 3:    [5,15)    7385454 0.12250542  2005 #> 4:       15+   49447627 0.82020720  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"contact-rates-per-capita","dir":"Articles","previous_headings":"","what":"Contact rates per capita","title":"Introduction to socialmixr","text":"contact matrix per capita cijc_{ij} contains social contact rates one individual age ii one individual age jj, given population details. example, cijc_{ij} used infectious disease modelling calculate force infection, based likelihood one susceptible individual age ii contact one infectious individual age jj. contact rates per capita calculated follows: cij=mijNjc_{ij} =  \\tfrac{m_{ij}}{N_{j}} get per capita contact matrix, use per.capita = TRUE calling contact_matrix() function. Please note option symmetric = TRUE specified, contact matrix mijm_{ij} can show asymmetry sub-population sizes different, contact matrix per capita fully symmetric: c′ij=mijNi+mjiNj2NiNj=c′jic'_{ij} = \\frac{m_{ij} N_i + m_{ji} N_j}{2N_iN_j} = c'_{ji}","code":"contact_matrix(survey = polymod, countries = \"Germany\", age.limits = c(0, 60), symmetric = TRUE, per.capita = TRUE) #> $matrix #>          contact.age.group #> age.group   [0,60)       60+ #>    [0,60) 7.743879 0.8967442 #>    60+    2.711694 2.1267606 #>  #> $matrix.per.capita #>          contact.age.group #> age.group       [0,60)          60+ #>    [0,60) 1.261735e-07 4.418248e-08 #>    60+    4.418248e-08 1.047852e-07 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,60)   61374868  0.7514869  2005 #> 2:       60+   20296375  0.2485131  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,60)         1062  0.8329412 #> 2:       60+          213  0.1670588"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"splitting-contact-matrices","dir":"Articles","previous_headings":"","what":"Splitting contact matrices","title":"Introduction to socialmixr","text":"contact_matrix() contains simple model elements contact matrix, split global component, well three components representing contacts, assortativity demography. words, elements mijm_{ij} contact matrix modeled mij=cqdiaijnj m_{ij} = c q d_i a_{ij} n_j cc mean number contacts across whole population, cqdic q d_i number contacts member group ii makes across age groups, njn_j proportion surveyed population age group jj. constant qq set cqc q equal value largest eigenvalue mijm_{ij}; used infectious disease model assumed every contact leads infection, cqc q can replaced basic reproduction number R0R_0. model contact matrix way contact_matrix() function, set split = TRUE. components matrix returned elements mean.contacts (cc), normalisation (qq), contacts (did_i), matrix (aija_{ij}) demography (njn_j) resulting list.","code":"contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15), split = TRUE) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> Warning: Not all age groups represented in population data (5-year age band). #> ℹ Linearly estimating age group sizes from the 5-year bands. #> $mean.contacts #> [1] 11.55481 #>  #> $normalisation #> [1] 1.039163 #>  #> $contacts #> [1] 0.6995727 0.7464190 1.2235173 0.9390331 #>  #> $matrix #>          contact.age.group #> age.group     [0,1)     [1,5)   [5,15)       15+ #>    [0,1)  4.1561551 2.0780776 1.230914 0.8611839 #>    [1,5)  1.0955555 4.7169752 1.332022 0.7413849 #>    [5,15) 0.1456110 0.7498969 4.415104 0.5158328 #>    15+    0.2500527 0.6930808 0.934443 1.0374170 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:     [0,1)     690734 0.01145748  2005 #> 2:     [1,5)    2762936 0.04582990  2005 #> 3:    [5,15)    7385454 0.12250542  2005 #> 4:       15+   49447627 0.82020720  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"Introduction to socialmixr","text":"filter argument contact_matrix() can used select particular participants contacts. example, polymod dataset, indicators cnt_home, cnt_work, cnt_school, cnt_transport, cnt_leisure cnt_otherplace take value 0 1 depending contact occurred. filter can applied data, given list form (column=filter_value). , contacts ‘filter_value’ ‘column’ considered generated contact matrix:","code":"# contact matrix for school-related contacts contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_school = 1))$matrix #>          contact.age.group #> age.group     [0,20)    [20,60)        60+ #>   [0,20)  5.17103805 1.09641670 0.03583303 #>   [20,60) 0.45714286 0.47542857 0.01457143 #>   60+     0.08980827 0.07366297 0.03531786  # contact matrix for work-related contacts involving physical contact contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_work = 1, phys_contact = 1))$matrix #>          contact.age.group #> age.group     [0,20)    [20,60)         60+ #>   [0,20)  0.04285187 0.06353897 0.009235316 #>   [20,60) 0.16057143 1.27000000 0.146285714 #>   60+     0.04238143 0.29465187 0.062563068  # contact matrix for daily contacts at home with males contact_matrix(polymod, age.limits = c(0, 20, 60), filter = list(cnt_home = 1, cnt_gender = \"M\", duration_multi = 5))$matrix #>          contact.age.group #> age.group     [0,20)   [20,60)        60+ #>   [0,20)  0.39268563 0.5858884 0.03103066 #>   [20,60) 0.25971429 0.3948571 0.04885714 #>   60+     0.05751766 0.1160444 0.23915237"},{"path":[]},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"temporal-aspects-and-demography","dir":"Articles","previous_headings":"Participant weights","what":"Temporal aspects and demography","title":"Introduction to socialmixr","text":"Participant weights commonly used align sample population characteristics terms temporal aspects age distribution. example, day week reported driving factor social contact behavior, hence obtain weekly average, survey data represent weekly 2/5 distribution weekend/week days. align survey data distribution, one can obtain participant weights form : wday..week=5/7Nweekday/N 2/7Nweekend/Nw_{\\textrm{day..week}} = \\tfrac{5/7}{N_{\\textrm{weekday}}/N} \\text{    } \\tfrac{2/7}{N_{\\textrm{weekend}}/N} sample size NN, NweekdayN_{weekday} NweekendN_{weekend} number participants surveyed weekdays weekend days, respectively. possible remove constant values (e.g. w=5/Nweekdayw = 5/N_{weekday}), results standardized weights. However, opt use relative proportions calculate weights enable truncation generic threshold (see ). Another driver social contact patterns age. improve representativeness survey data, age-specific weights can calculated : wage=Pa/PNa/Nw_{age} = \\tfrac{P_{}\\ /\\ P}{N_{}\\ /\\ N} PP population size, PaP_a population fraction age aa, NN survey sample size NaN_a survey fraction age aa. combination age-specific temporal weights participant ii age aa can constructed : wi=wage*wday..weekw_{} = w_{\\textrm{age}} * w_{\\textrm{day..week}}  Finally, weights can standardized follows: w̃=wi∑w*N\\tilde{w}_{} =  \\tfrac{w_{}}{\\sum_{}^{} w_{}} * N social contact analysis based stratification splitting population non-overlapping groups, requires weights standardized weighted totals within mutually exclusive cells equal known population totals (Kolenikov 2016). post-stratification cells need mutually exclusive cover whole population. post-stratified (PS) weight participant ii : w̃iPS=wi∑jgroup gwj*Ng\\tilde{w}^{PS}_{} =  \\tfrac{w_{}}{\\sum_{\\text{j}}^{\\text{group g}} w_{j}} * N_g Temporal weights activated contact_matrix() weigh.dayofweek = TRUE age-specific weights weight.age = TRUE. post-stratification weights calculated default. possible obtain participant weights via option return.part.weights = TRUE.","code":"contact_matrix(   survey = polymod, age.limits = c(0, 18, 60), weigh.dayofweek = TRUE,   weigh.age = TRUE, return.part.weights = TRUE ) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.5152158  5.839458 0.7193179 #>   [18,60) 2.0433998 10.318853 1.2413142 #>   60+     0.7761051  4.354554 2.4995467 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,18)   52955807  0.1948624  2005 #> 2:   [18,60)  157719526  0.5803634  2005 #> 3:       60+   61084635  0.2247742  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 #>  #> $participants.weights #>      age.group participant.age is.weekday    weight participants   proportion #>         <fctr>           <int>     <lgcl>     <num>        <int>        <num> #>   1:    [0,18)               0      FALSE 1.4566422           27 0.0037510420 #>   2:    [0,18)               0       TRUE 1.3087772           66 0.0091692137 #>   3:    [0,18)               1      FALSE 1.1288977           32 0.0044456794 #>   4:    [0,18)               1       TRUE 1.0143024           88 0.0122256182 #>   5:    [0,18)               2      FALSE 0.9473268           39 0.0054181717 #>  ---                                                                          #> 167:       60+              83       TRUE 5.6502663            4 0.0005557099 #> 168:       60+              84      FALSE 8.3848408            1 0.0001389275 #> 169:       60+              84       TRUE 7.5336884            2 0.0002778550 #> 170:       60+              85       TRUE 3.1671409            3 0.0004167824 #> 171:       60+              90       TRUE 4.7540746            1 0.0001389275"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"user-defined-participant-weights","dir":"Articles","previous_headings":"Participant weights","what":"User-defined participant weights","title":"Introduction to socialmixr","text":"contact_matrix() allows specify use participant weights. Therefore, provide names columns participant data want use weight reported contacts via weights argument.","code":"# e.g. use household size as (dummy) weight to provide more importance to participant data from large households contact_matrix(survey = polymod, age.limits = c(0, 18, 60), weights = \"hh_size\") #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.9599558  5.907367 0.7338418 #>   [18,60) 2.4650353 10.960550 1.2399199 #>   60+     0.9909593  5.659468 2.7081868 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"weight-threshold","dir":"Articles","previous_headings":"Participant weights","what":"Weight threshold","title":"Introduction to socialmixr","text":"survey population differs extensively demography, participants can end relatively high weights , excessive contribution population average. warrants limitation single participant influences truncation weights. enable contact_matrix(), need provide numeric weight.threshold. truncation applied standardized weights, followed another standardization make sure sum weights still equals sample size. latter can lead final weights little exceed given threshold value.","code":"contact_matrix(   survey = polymod, age.limits = c(0, 18, 60), weigh.dayofweek = TRUE,   weigh.age = TRUE, return.part.weights = TRUE, weight.threshold = 3 ) #> $matrix #>          contact.age.group #> age.group    [0,18)   [18,60)       60+ #>   [0,18)  8.5152158  5.839458 0.7193179 #>   [18,60) 2.0433998 10.318853 1.2413142 #>   60+     0.7720958  4.410151 2.5401091 #>  #> $demography #>    age.group population proportion  year #>       <char>      <num>      <num> <int> #> 1:    [0,18)   52955807  0.1948624  2005 #> 2:   [18,60)  157719526  0.5803634  2005 #> 3:       60+   61084635  0.2247742  2005 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:    [0,18)         2462  0.3420395 #> 2:   [18,60)         3745  0.5202834 #> 3:       60+          991  0.1376771 #>  #> $participants.weights #>      age.group participant.age is.weekday    weight participants   proportion #>         <fctr>           <int>     <lgcl>     <num>        <int>        <num> #>   1:    [0,18)               0      FALSE 1.4566422           27 0.0037510420 #>   2:    [0,18)               0       TRUE 1.3087772           66 0.0091692137 #>   3:    [0,18)               1      FALSE 1.1288977           32 0.0044456794 #>   4:    [0,18)               1       TRUE 1.0143024           88 0.0122256182 #>   5:    [0,18)               2      FALSE 0.9473268           39 0.0054181717 #>  ---                                                                          #> 167:       60+              83       TRUE 3.1063091            4 0.0005557099 #> 168:       60+              84      FALSE 3.1063091            1 0.0001389275 #> 169:       60+              84       TRUE 3.1063091            2 0.0002778550 #> 170:       60+              85       TRUE 3.1063091            3 0.0004167824 #> 171:       60+              90       TRUE 3.1063091            1 0.0001389275"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"numerical-example","dir":"Articles","previous_headings":"Participant weights","what":"Numerical example","title":"Introduction to socialmixr","text":"numeric examples, show importance post-stratification weights contrast using crude weights directly within age-groups. apply weights age day week separately examples, though combination straightforward via multiplication.","code":""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"get-survey-data","dir":"Articles","previous_headings":"Participant weights > Numerical example","what":"Get survey data","title":"Introduction to socialmixr","text":"start survey including 6 participants 1, 2 3 years age. ages equally represented sample, though assume equally present reference population. calculate weighted average number contacts age age group, using {1,2} {3} years age. following table shows reported number contacts per participant ii, represented mim_i: summary statistics sample (N) reference population (P) follows survey data results unweighted average number contacts: age-specific unweighted averages number contacts:","code":"N <- 6 N_age <- c(2, 3, 1) N_age.group <- c(5, 1) N_day.of.week <- c(3, 3)  P <- 3000 P_age <- c(1000, 1000, 1000) P_age.group <- c(2000, 1000)  P_day.of.week <- c(5 / 7, 2 / 7) * 3000 #> [1] \"unweighted average number of contacts: 7.83\""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"weight-by-day-of-week","dir":"Articles","previous_headings":"Participant weights > Numerical example","what":"Weight by day of week","title":"Introduction to socialmixr","text":"following table contains participants weights based survey day without population sample size constants (ww w′w', respectively). Note standardized weights w̃\\tilde{w} w′̃\\tilde{w'} : Note different scale ww w′w', straightforward interpretation numerical value ww terms relative differences apply truncation. Using standardized weights, able calculate weighted number contacts: population-based weights directly used age-specific groups, contact behavior 3 year-old participant, participated week day, inflated due -representation week days survey sample. addition, number contacts 1 year-old participants decreased -representation weekend days survey. Using population-weights within two aggregated age groups, obtain intuitive weighting age group , still skewed individuals age group B. , weighted average age group B meaning terms social contact behavior: subdivide population, need use post-stratification weights (“w_PS”) weighted totals within mutually exclusive cells equal sample size. age groups, goes follows: weighted means equal:","code":"#> [1] \"weighted average number of contacts: 9.2\""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"weight-by-age","dir":"Articles","previous_headings":"Participant weights > Numerical example","what":"Weight by age","title":"Introduction to socialmixr","text":"repeated example calculating age-specific participant weights population age-group level: age-specific weights directly used within age groups, contact behavior age group B inflated unrealistic levels number contacts age group artificially low: Using post-stratification weights, end :","code":"#> [1] \"weighted average number of contacts: 8.85\""},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"apply-threshold","dir":"Articles","previous_headings":"Participant weights > Numerical example","what":"Apply threshold","title":"Introduction to socialmixr","text":"start survey data 14 participants 1, 2 3 years age, sampled population ages equally present. Given high representation participants aged 1 year, age-specific proportions skewed comparison reference population. calculate age-specific weights (un)weighted average number contacts, end : single participant 3 years age large influence weighted population average. , propose truncate relative age-specific weights ww 3. , weighted population average equals:","code":"#> [1] \"unweighted average number of contacts: 5.86\" #> [1] \"weighted average number of contacts: 13.86\" #> [1] \"weighted average number of contacts after truncation: 10.28\""},{"path":[]},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"using-ggplot2","dir":"Articles","previous_headings":"Plotting","what":"Using ggplot2","title":"Introduction to socialmixr","text":"contact matrices can plotted using geom_tile() function ggplot2 package.","code":"df <- reshape2::melt(mr, varnames = c(\"age.group\", \"age.group.contact\"), value.name = \"contacts\") ggplot(df, aes(x = age.group, y = age.group.contact, fill = contacts)) +   theme(legend.position = \"bottom\") +   geom_tile()"},{"path":"https://epiforecasts.io/socialmixr/articles/socialmixr.html","id":"using-r-base","dir":"Articles","previous_headings":"Plotting","what":"Using R base","title":"Introduction to socialmixr","text":"contact matrices can also plotted matrix_plot() function grid colored rectangles numeric values cells. Heat colors used default, though can changed.","code":"matrix_plot(mr) matrix_plot(mr, color.palette = gray.colors)"},{"path":[]},{"path":"https://epiforecasts.io/socialmixr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Funk. Author, maintainer. Lander Willem. Author. Hugo Gruson. Author. Maria Bekker-Nielsen Dunbar. Contributor. Carl . B. Pearson. Contributor. Sam Clifford. Contributor. Christopher Jarvis. Contributor. Alexis Robert. Contributor. Niel Hens. Contributor. Pietro Coletti. Collector, data manager.","code":""},{"path":"https://epiforecasts.io/socialmixr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Funk S, Willem L, Gruson H (2025). socialmixr: Social Mixing Matrices Infectious Disease Modelling. R package version 0.4.0.9000, https://github.com/epiforecasts/socialmixr.","code":"@Manual{,   title = {socialmixr: Social Mixing Matrices for Infectious Disease Modelling},   author = {Sebastian Funk and Lander Willem and Hugo Gruson},   year = {2025},   note = {R package version 0.4.0.9000},   url = {https://github.com/epiforecasts/socialmixr}, }"},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"social-mixing-matrices-for-infectious-disease-modelling-in-r","dir":"","previous_headings":"","what":"Social Mixing Matrices for Infectious Disease Modelling","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"socialmixr R package derive social mixing matrices survey data.","code":""},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"package can installed using current development version can installed using remotes package","code":"install.packages(\"socialmixr\") remotes::install_github(\"epiforecasts/socialmixr\")"},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"information use socialmixr package, see introduction vignette.","code":""},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"contributions project gratefully acknowledged using allcontributors package following allcontributors specification. Contributions kind welcome!","code":""},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"sbfnk, Bisaloo, lwillem, alxsrobert, Degoot-, pearsonca, jarvisc1, jamesmbaazam, mariabnd, samclifford, TimTaylor","code":""},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"issue-authors","dir":"","previous_headings":"Contributors","what":"Issue Authors","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"bastistician, BlackEdder, Pinzo1, florpi, cchauve, thutran, dlaydon, deusthindwa, krivit, linyang17, cliu822, NaomiWaterlow, aakhmetz, adamkucharski, chitrams, IsaacStopard","code":""},{"path":"https://epiforecasts.io/socialmixr/index.html","id":"issue-contributors","dir":"","previous_headings":"Contributors","what":"Issue Contributors","title":"Social Mixing Matrices for Infectious Disease Modelling","text":"vikkytom, njtierney, bahadzie, joshwlambert","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/as_contact_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Check contact survey data — as_contact_survey","title":"Check contact survey data — as_contact_survey","text":"Checks survey fulfills requirements work 'contact_matrix' function","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/as_contact_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check contact survey data — as_contact_survey","text":"","code":"as_contact_survey(   x,   id.column = \"part_id\",   country.column = \"country\",   year.column = \"year\" )"},{"path":"https://epiforecasts.io/socialmixr/reference/as_contact_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check contact survey data — as_contact_survey","text":"x list containing element named 'participants', data frame containing participant information element named 'contacts', data frame containing contact information (optionally) element named 'reference, list containing information information needed reference survey, particular can contain$\"title\", \"bibtype\", \"author\", \"doi\", \"publisher\", \"note\", \"year\" id.column column participants contacts data frames links contacts participants country.column column participants data frame containing country participant queried year.column column participants data frame containing year participant queried","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/as_contact_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check contact survey data — as_contact_survey","text":"invisibly returns character vector relevant columns","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/as_contact_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check contact survey data — as_contact_survey","text":"","code":"data(polymod) check(polymod) #> Warning: `check()` was deprecated in socialmixr 1.0.0. #> ℹ Use `as_contact_survey()` instead to construct a `<contact_survey>` object. #>   This will perform necessary checks. #> → Check OK."},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check contact survey data — check","title":"Check contact survey data — check","text":"Checks survey fulfills requirements work 'contact_matrix' function","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check contact survey data — check","text":"","code":"# S3 method for class 'contact_survey' check(   x,   id.column = \"part_id\",   participant.age.column = \"part_age\",   country.column = \"country\",   year.column = \"year\",   contact.age.column = \"cnt_age\",   ... )"},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check contact survey data — check","text":"x survey() object id.column column participants contacts data frames links contacts participants participant.age.column column participants data frame containing participants' age; exist, least columns \"..._exact\", \"..._est_min\" \"..._est_max\" must (see estimated.participant.age option contact_matrix()) country.column column participants data frame containing country participant queried year.column column participants data frame containing year participant queried contact.age.column column contacts data frame containing age contacts; exist, least columns \"..._exact\", \"..._est_min\" \"..._est_max\" must (see estimated.contact.age option contact_matrix()) ... ignored","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check contact survey data — check","text":"invisibly returns character vector relevant columns","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check contact survey data — check","text":"","code":"data(polymod) check(polymod) #> → Check OK."},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean contact survey data — clean","title":"Clean contact survey data — clean","text":"Cleans survey data work 'contact_matrix' function","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean contact survey data — clean","text":"","code":"# S3 method for class 'contact_survey' clean(x, participant.age.column = \"part_age\", ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean contact survey data — clean","text":"x survey() object participant.age.column column x$participants containing participants' age ... ignored","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean contact survey data — clean","text":"cleaned survey correct format","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean contact survey data — clean","text":"","code":"data(polymod) cleaned <- clean(polymod) # not really necessary as the 'polymod' data set has already been cleaned"},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a contact matrix from diary survey data — contact_matrix","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"Samples contact survey","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"","code":"contact_matrix(   survey,   countries = NULL,   survey.pop,   age.limits,   filter,   counts = FALSE,   symmetric = FALSE,   split = FALSE,   sample.participants = FALSE,   estimated.participant.age = c(\"mean\", \"sample\", \"missing\"),   estimated.contact.age = c(\"mean\", \"sample\", \"missing\"),   missing.participant.age = c(\"remove\", \"keep\"),   missing.contact.age = c(\"remove\", \"sample\", \"keep\", \"ignore\"),   weights = NULL,   weigh.dayofweek = FALSE,   weigh.age = FALSE,   weight.threshold = NA,   symmetric.norm.threshold = 2,   sample.all.age.groups = FALSE,   return.part.weights = FALSE,   return.demography = NA,   per.capita = FALSE,   ... )"},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"survey survey() object countries limit one countries; given, use countries survey; can given country names 2-letter (ISO Alpha-2) country codes survey.pop survey population – either data frame columns 'lower.age.limit' 'population', character vector giving name(s) country countries list can obtained via wpp_countries; given, use country populations chosen countries, countries survey countries given age.limits lower limits age groups construct matrix filter filters apply data, given list form (column=filter_value) - contacts 'filter_value' 'column' considered. multiple filters given, applied independently sequence given. counts whether return counts (instead means) symmetric whether make matrix symmetric, \\(c_{ij}N_i = c_{ji}N_j\\). split whether split contact matrix mean number contacts, age group (split product mean number contacts across whole population (mean.contacts), normalisation constant (normalisation) age-specific variation contacts (contacts)), multiplied assortativity matrix (assortativity) population multiplier (demograpy). detail , see \"Getting Started\" vignette. sample.participants whether sample participants randomly (replacement); done multiple times can used assess uncertainty generated contact matrices. See \"Bootstrapping\" section vignette .. estimated.participant.age set \"mean\" (default), people whose ages given range (columns named \"..._est_min\" \"..._est_max\") exactly (column named \"..._exact\") age set mid-point range; set \"sample\", age sampled range; set \"missing\", age ranges treated missing estimated.contact.age set \"mean\" (default), contacts whose ages given range (columns named \"..._est_min\" \"..._est_max\") exactly (column named \"..._exact\") age set mid-point range; set \"sample\", age sampled range; set \"missing\", age ranges treated missing missing.participant.age set \"remove\" (default), participants without age information removed; set \"keep\", participants missing age kept treated separate age group missing.contact.age set \"remove\" (default), participants contacts without age information removed; set \"sample\", contacts without age information sampled contacts participants age group; set \"keep\", contacts missing age kept treated separate age group; set \"ignore\", contact missing age ignored contact analysis weights column names(s) participant data survey() object user-specified weights (default = empty vector) weigh.dayofweek whether weigh social contacts data day week (weight (5/7 / N_week / N) weekdays (2/7 / N_weekend / N) weekends) weigh.age whether weigh social contacts data age participants (vs. populations' age distribution) weight.threshold threshold value standardized weights running additional standardisation (default 'NA' = cutoff) symmetric.norm.threshold threshold value normalization weights symmetric = TRUE showing warning large differences size sub-populations likely result artefacts making matrix symmetric (default 2). sample..age.groups sampling participants (sample.participants = TRUE) fails sample participants one age groups; FALSE (default), corresponding rows set NA, TRUE sample discarded new one taken instead return.part.weights boolean return participant weights return.demography boolean explicitly return demography data corresponds survey data (default 'NA' = demography data requested function parameters) per.capita whether return matrix contact rates per capita (default FALSE possible 'counts=TRUE' 'split=TRUE') ... arguments pass get_survey(), check() pop_age() (especially column names)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"contact matrix, underlying demography surveyed population","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"Sebastian Funk","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/contact_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a contact matrix from diary survey data — contact_matrix","text":"","code":"data(polymod) contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 1, 5, 15)) #> Removing participants that have contacts without age information. #> ℹ To change this behaviour, set the 'missing.contact.age' option. #> $matrix #>          contact.age.group #> age.group      [0,1)     [1,5)   [5,15)      15+ #>    [0,1)  0.40000000 0.8000000 1.266667 5.933333 #>    [1,5)  0.11250000 1.9375000 1.462500 5.450000 #>    [5,15) 0.02450980 0.5049020 7.946078 6.215686 #>    15+    0.03230337 0.3581461 1.290730 9.594101 #>  #> $participants #>    age.group participants proportion #>       <char>        <int>      <num> #> 1:     [0,1)           15 0.01483680 #> 2:     [1,5)           80 0.07912957 #> 3:    [5,15)          204 0.20178042 #> 4:       15+          712 0.70425321 #>"},{"path":"https://epiforecasts.io/socialmixr/reference/dot-get_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to get survey data — .get_survey","title":"Internal function to get survey data — .get_survey","text":"Internal function get survey data","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/dot-get_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to get survey data — .get_survey","text":"","code":".get_survey(survey, ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/dot-get_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to get survey data — .get_survey","text":"survey DOI url get survey , survey() object (case cleaning done). ... options clean(), called end ","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/download_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a survey from its Zenodo repository — download_survey","title":"Download a survey from its Zenodo repository — download_survey","text":"Downloads survey data","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/download_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a survey from its Zenodo repository — download_survey","text":"","code":"download_survey(survey, dir = NULL, sleep = 1)"},{"path":"https://epiforecasts.io/socialmixr/reference/download_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a survey from its Zenodo repository — download_survey","text":"survey URL (see list_surveys()) dir directory save files ; given, save temporary directory sleep time sleep requests avoid overloading server (passed Sys.sleep)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/download_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a survey from its Zenodo repository — download_survey","text":"vector filenames can used load_survey","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/download_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a survey from its Zenodo repository — download_survey","text":"","code":"if (FALSE) { # \\dontrun{ list_surveys() peru_survey <- download_survey(\"https://doi.org/10.5281/zenodo.1095664\") } # }"},{"path":"https://epiforecasts.io/socialmixr/reference/get_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Citation for a survey — get_citation","title":"Citation for a survey — get_citation","text":"Gets full citation survey().","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Citation for a survey — get_citation","text":"","code":"get_citation(x)"},{"path":"https://epiforecasts.io/socialmixr/reference/get_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Citation for a survey — get_citation","text":"x character vector surveys cite","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Citation for a survey — get_citation","text":"citation bibentry","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Citation for a survey — get_citation","text":"","code":"data(polymod) citation <- get_citation(polymod) print(citation) #> Mossong J, Hens N, Jit M, Beutels P, Auranen K, Mikolajczyk R, Massari #> M, Salmaso S, Tomba GS, Wallinga J, Heijne J, Sadkowska-Todys M, #> Rosinska M, Edmunds WJ (2017). “POLYMOD social contact data.” #> doi:10.5281/zenodo.1157934 <https://doi.org/10.5281/zenodo.1157934>, #> Version 1.1. print(citation, style = \"bibtex\") #> @Misc{, #>   title = {POLYMOD social contact data}, #>   author = {Joël Mossong and Niel Hens and Mark Jit and Philippe Beutels and Kari Auranen and Rafael Mikolajczyk and Marco Massari and Stefania Salmaso and Gianpaolo Scalia Tomba and Jacco Wallinga and Janneke Heijne and Malgorzata Sadkowska-Todys and Magdalena Rosinska and W. John Edmunds}, #>   year = {2017}, #>   note = {Version 1.1}, #>   doi = {10.5281/zenodo.1157934}, #> }"},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"Downloads survey data, extracts files, returns clean data set. survey URL accessed multiple times, data cached (unless clear_cache set TRUE) avoid repeated downloads.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"","code":"get_survey(survey, clear_cache = FALSE, ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"survey DOI url get survey , survey() object (case cleaning done). clear_cache logical, whether clear cache downloading survey; default, cache cleared multiple calls function access survey result repeated downloads ... options clean(), called end ","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"survey correct format","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"survey objects used repeatedly downloaded files can saved reloaded sessions survey objects can saved/loaded using base::saveRDS() base::readRDS(), via individual survey files can downloaded using download_survey() subsequently loaded using load_survey().","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/get_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a survey, either from its Zenodo repository, a set of files, or a survey variable — get_survey","text":"","code":"if (FALSE) { # \\dontrun{ list_surveys() peru_survey <- get_survey(\"https://doi.org/10.5281/zenodo.1095664\") } # }"},{"path":"https://epiforecasts.io/socialmixr/reference/is_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if a character string is a DOI — is_doi","title":"Checks if a character string is a DOI — is_doi","text":"Checks character string DOI","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/is_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if a character string is a DOI — is_doi","text":"","code":"is_doi(x)"},{"path":"https://epiforecasts.io/socialmixr/reference/is_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if a character string is a DOI — is_doi","text":"x Character vector; string strings check","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/is_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if a character string is a DOI — is_doi","text":"Logical; TRUE x DOI, FALSE otherwise","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/is_doi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checks if a character string is a DOI — is_doi","text":"Sebastian Funk","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert lower age limits to age groups. — limits_to_agegroups","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"Mostly used plot labelling","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"","code":"limits_to_agegroups(   x,   limits = sort(unique(x)),   notation = c(\"dashes\", \"brackets\") )"},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"x age limits transform limits lower age limits; given, use limits x notation whether use bracket notation, e.g. [0,4) dash notation, e.g. 0-4)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"Age groups specified notation","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/limits_to_agegroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert lower age limits to age groups. — limits_to_agegroups","text":"","code":"limits_to_agegroups(c(0, 5, 10)) #> Warning: In the next version of socialmixr the default notation will become \"brackets\" #> instead of \"dashes\". To prevent this, use `notation = \"dashes\"` in the call to #> `limits_to_agegroups()`. #> [1] 0-4 5-9 10+ #> Levels: 0-4 < 5-9 < 10+"},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"List all surveys available for download — list_surveys","title":"List all surveys available for download — list_surveys","text":"List surveys available download","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all surveys available for download — list_surveys","text":"","code":"list_surveys(clear_cache = FALSE)"},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all surveys available for download — list_surveys","text":"clear_cache logical, whether clear cache downloading survey; default, cache cleared multiple calls function access survey result repeated downloads","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all surveys available for download — list_surveys","text":"character vector surveys","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/list_surveys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all surveys available for download — list_surveys","text":"","code":"if (FALSE) { # \\dontrun{ list_surveys() } # }"},{"path":"https://epiforecasts.io/socialmixr/reference/load_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a survey from local files — load_survey","title":"Load a survey from local files — load_survey","text":"Loads survey local file system. Tables expected csv files, reference (present) JSON.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/load_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a survey from local files — load_survey","text":"","code":"load_survey(files, ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/load_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a survey from local files — load_survey","text":"files vector file names returned download_survey() ... options clean(), called end ","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/load_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a survey from local files — load_survey","text":"survey correct format","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/load_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a survey from local files — load_survey","text":"","code":"if (FALSE) { # \\dontrun{ list_surveys() peru_files <- download_survey(\"https://doi.org/10.5281/zenodo.1095664\") peru_survey <- load_survey(peru_files) } # }"},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"function combines R image.plot function numeric contact rates matrix cells.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"","code":"matrix_plot(   mij,   min.legend = 0,   max.legend = NA,   num.digits = 2,   num.colors = 50,   main,   xlab,   ylab,   legend.width,   legend.mar,   legend.shrink,   cex.lab,   cex.axis,   cex.text,   color.palette = heat.colors )"},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"mij contact matrix containing contact rates participants age (rows) contacts age j (columns). default matrix format contact_matrix(). min.legend color scale minimum (default = 0). Set NA use minimum value mij. max.legend color scale maximum (default = NA). Set NA use maximum value mij. num.digits number digits rounding contact rates (default = 2). Use NA disable . num.colors number color breaks (default = 50) main figure title xlab title x axis (default: \"Age group (years)\") ylab title y axis (default: \"Contact age group (years)\") legend.width width legend strip characters. Default 1. legend.mar width characters legend margin. Default 5.1. legend.shrink amount shrink size legend relative full height width plot. Default 0.9. cex.lab size x y labels (default: 1.2) cex.axis size axis labels (default: 0.8) cex.text size numeric values matrix (default: 1) color.palette color palette use (default: heat.colors()). examples topo.colors(), terrain.colors() hcl.colors(). User-defined functions also possible take number colors palette function argument.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"function using basic R graphics visualise social contact matrix.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"Lander Willem","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/matrix_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws an image plot of a contact matrix with a legend strip and the numeric values in the cells. — matrix_plot","text":"","code":"if (FALSE) { # \\dontrun{ data(polymod) mij <- contact_matrix(polymod, countries = \"United Kingdom\", age.limits = c(0, 18, 65))$matrix matrix_plot(mij) } # }"},{"path":"https://epiforecasts.io/socialmixr/reference/new_contact_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Contact survey — new_contact_survey","title":"Contact survey — new_contact_survey","text":"Deprecated. survey object contains results contact survey. particular, contains two data frames called participants contacts linked column specified id.column","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/new_contact_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contact survey — new_contact_survey","text":"","code":"new_contact_survey(participants, contacts, reference = NULL)"},{"path":"https://epiforecasts.io/socialmixr/reference/new_contact_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contact survey — new_contact_survey","text":"participants data.frame containing information participants contacts data.frame containing information contacts reference list containing information needed reference survey, particular can contain$\"title\", \"bibtype\", \"author\", \"doi\", \"publisher\", \"note\", \"year\"","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/new_contact_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contact survey — new_contact_survey","text":"new survey object","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/new_contact_survey.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Contact survey — new_contact_survey","text":"Sebastian Funk","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/polymod.html","id":null,"dir":"Reference","previous_headings":"","what":"Social contact data from 8 European countries — polymod","title":"Social contact data from 8 European countries — polymod","text":"dataset containing social mixing diary data 8 European countries: Belgium, Germany, Finland, Great Britain, Italy, Luxembourg, Netherlands Poland. Data fully described Mossong J, Hens N, Jit M, Beutels P, Auranen K, Mikolajczyk R, et al. (2008) Social Contacts Mixing Patterns Relevant Spread Infectious Diseases. PLoS Med 5(3): e74.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/polymod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Social contact data from 8 European countries — polymod","text":"","code":"polymod"},{"path":"https://epiforecasts.io/socialmixr/reference/polymod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Social contact data from 8 European countries — polymod","text":"list two data frames: participants study participant, age, country, year day week (starting 1 = Monday) contacts reported contacts study participants. variable phys_contact two levels (1 denotes physical contact 2 denotes non-physical contact), duration_multi five levels (1 less 5 minutes 5 4 hours, increasing order found Figure 1 Mossong et al.), frequency_multi five levels (1 daily, 2 weekly, 3 monthly, 4 less often, 5 first time)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/polymod.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Social contact data from 8 European countries — polymod","text":"doi:10.1371/journal.pmed.0050074","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Change age groups in population data — pop_age","title":"Change age groups in population data — pop_age","text":"changes population data age groups given age.limits, extrapolating linearly age groups (requested available) summing populations (fewer requested available)","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change age groups in population data — pop_age","text":"","code":"pop_age(   pop,   age.limits,   pop.age.column = \"lower.age.limit\",   pop.column = \"population\",   ... )"},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change age groups in population data — pop_age","text":"pop data frame columns indicating lower age limits population sizes (see 'age.column' 'pop.column') age.limits lower age limits age groups extract pop.age.column column 'pop' data frame indicating lower age group limit pop.column column 'pop' data frame indicating population size ... ignored","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change age groups in population data — pop_age","text":"data frame age-specific population data","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/pop_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change age groups in population data — pop_age","text":"","code":"ages_it_2015 <- wpp_age(\"Italy\", 2015)  # Modify the age data.frame to get age groups of 10 years instead of 5 pop_age(ages_it_2015, age.limit = seq(0, 100, by = 10)) #>    lower.age.limit population #> 1                0    5364003 #> 2               10    5592457 #> 3               20    5961399 #> 4               30    7291448 #> 5               40    9506109 #> 6               50    8773851 #> 7               60    7351345 #> 8               70    5689656 #> 9               80    3300856 #> 10              90     655885 #> 11             100      17203  # The function will also automatically interpolate if necessary pop_age(ages_it_2015, age.limit = c(0, 18, 40, 65)) #> Warning: Not all age groups represented in population data (5-year age band). #> ℹ Linearly estimating age group sizes from the 5-year bands. #>   lower.age.limit population #> 1               0    9841066 #> 2              18   14368241 #> 3              40   21988054 #> 4              65   13306851"},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"Operates lower limits","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"","code":"reduce_agegroups(x, limits)"},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"x vector limits limits new limits","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"vector new age groups","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/reduce_agegroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the number of age groups given a broader set of limits — reduce_agegroups","text":"","code":"reduce_agegroups(seq_len(20), c(0, 5, 10)) #>  [1]  0  0  0  0  5  5  5  5  5 10 10 10 10 10 10 10 10 10 10 10"},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Contact survey — survey","title":"Contact survey — survey","text":"Deprecated. Use as_survey instead.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contact survey — survey","text":"","code":"survey(participants, contacts, reference = NULL)"},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contact survey — survey","text":"participants data.frame containing information participants contacts data.frame containing information contacts reference list containing information needed reference survey, particular can contain$\"title\", \"bibtype\", \"author\", \"doi\", \"publisher\", \"note\", \"year\"","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contact survey — survey","text":"new survey object","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Contact survey — survey","text":"Sebastian Funk","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"List all countries contained in a survey — survey_countries","title":"List all countries contained in a survey — survey_countries","text":"List countries contained survey","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all countries contained in a survey — survey_countries","text":"","code":"survey_countries(survey, country.column = \"country\", ...)"},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all countries contained in a survey — survey_countries","text":"survey DOI url get survey , survey() object (case cleaning done). country.column column survey indicating country ... arguments get_survey()","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all countries contained in a survey — survey_countries","text":"list countries","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/survey_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all countries contained in a survey — survey_countries","text":"","code":"data(polymod) survey_countries(polymod) #> [1] \"Italy\"          \"Germany\"        \"Luxembourg\"     \"Netherlands\"    #> [5] \"Poland\"         \"United Kingdom\" \"Finland\"        \"Belgium\""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"uses data wpp2017 package combines male female, converts age groups lower age limits. requested year present historical data, wpp projections used.","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"","code":"wpp_age(countries, years)"},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"countries countries, return given years years, return given","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"data frame age-specific population data","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get age-specific population data according to the World Population Prospects 2017 edition — wpp_age","text":"","code":"wpp_age(\"Italy\", c(1990, 2000)) #>    country lower.age.limit year population #> 1    Italy               0 1990    2822304 #> 2    Italy               0 2000    2637136 #> 3    Italy               5 1990    3023980 #> 4    Italy               5 2000    2739340 #> 5    Italy              10 1990    3561309 #> 6    Italy              10 2000    2831090 #> 7    Italy              15 1990    4319849 #> 8    Italy              15 2000    3073079 #> 9    Italy              20 1990    4605558 #> 10   Italy              20 2000    3604592 #> 11   Italy              25 1990    4569835 #> 12   Italy              25 2000    4310742 #> 13   Italy              30 1990    4089269 #> 14   Italy              30 2000    4585507 #> 15   Italy              35 1990    3877176 #> 16   Italy              35 2000    4550292 #> 17   Italy              40 1990    4012685 #> 18   Italy              40 2000    4048479 #> 19   Italy              45 1990    3442232 #> 20   Italy              45 2000    3814334 #> 21   Italy              50 1990    3667739 #> 22   Italy              50 2000    3917415 #> 23   Italy              55 1990    3406176 #> 24   Italy              55 2000    3321124 #> 25   Italy              60 1990    3242609 #> 26   Italy              60 2000    3462994 #> 27   Italy              65 1990    2950508 #> 28   Italy              65 2000    3092828 #> 29   Italy              70 1990    1757407 #> 30   Italy              70 2000    2746488 #> 31   Italy              75 1990    1899219 #> 32   Italy              75 2000    2234744 #> 33   Italy              80 1990    1178560 #> 34   Italy              80 2000    1103674 #> 35   Italy              85 1990     516304 #> 36   Italy              85 2000     861254 #> 37   Italy              90 1990     155466 #> 38   Italy              90 2000     299811 #> 39   Italy              95 1990      26710 #> 40   Italy              95 2000      53950 #> 41   Italy             100 1990       2231 #> 42   Italy             100 2000       4848"},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"List all countries and regions for which socialmixr has population data — wpp_countries","title":"List all countries and regions for which socialmixr has population data — wpp_countries","text":"Uses World Population Prospects data wpp2017 package","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all countries and regions for which socialmixr has population data — wpp_countries","text":"","code":"wpp_countries()"},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all countries and regions for which socialmixr has population data — wpp_countries","text":"list countries","code":""},{"path":"https://epiforecasts.io/socialmixr/reference/wpp_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all countries and regions for which socialmixr has population data — wpp_countries","text":"","code":"wpp_countries() #>   [1] \"Burundi\"                          \"Comoros\"                          #>   [3] \"Djibouti\"                         \"Eritrea\"                          #>   [5] \"Ethiopia\"                         \"Kenya\"                            #>   [7] \"Madagascar\"                       \"Malawi\"                           #>   [9] \"Mauritius\"                        \"Mayotte\"                          #>  [11] \"Mozambique\"                       \"Réunion\"                          #>  [13] \"Rwanda\"                           \"Seychelles\"                       #>  [15] \"Somalia\"                          \"South Sudan\"                      #>  [17] \"Uganda\"                           \"Tanzania\"                         #>  [19] \"Zambia\"                           \"Zimbabwe\"                         #>  [21] \"Angola\"                           \"Cameroon\"                         #>  [23] \"Central African Republic\"         \"Chad\"                             #>  [25] \"Congo - Brazzaville\"              \"Congo - Kinshasa\"                 #>  [27] \"Equatorial Guinea\"                \"Gabon\"                            #>  [29] \"São Tomé & Príncipe\"              \"Algeria\"                          #>  [31] \"Egypt\"                            \"Libya\"                            #>  [33] \"Morocco\"                          \"Sudan\"                            #>  [35] \"Tunisia\"                          \"Western Sahara\"                   #>  [37] \"Botswana\"                         \"Lesotho\"                          #>  [39] \"Namibia\"                          \"South Africa\"                     #>  [41] \"Eswatini\"                         \"Benin\"                            #>  [43] \"Burkina Faso\"                     \"Cape Verde\"                       #>  [45] \"Côte d’Ivoire\"                    \"Gambia\"                           #>  [47] \"Ghana\"                            \"Guinea\"                           #>  [49] \"Guinea-Bissau\"                    \"Liberia\"                          #>  [51] \"Mali\"                             \"Mauritania\"                       #>  [53] \"Niger\"                            \"Nigeria\"                          #>  [55] \"Senegal\"                          \"Sierra Leone\"                     #>  [57] \"Togo\"                             \"China\"                            #>  [59] \"Hong Kong SAR China\"              \"Macao SAR China\"                  #>  [61] \"North Korea\"                      \"Japan\"                            #>  [63] \"Mongolia\"                         \"South Korea\"                      #>  [65] \"Kazakhstan\"                       \"Kyrgyzstan\"                       #>  [67] \"Tajikistan\"                       \"Turkmenistan\"                     #>  [69] \"Uzbekistan\"                       \"Afghanistan\"                      #>  [71] \"Bangladesh\"                       \"Bhutan\"                           #>  [73] \"India\"                            \"Iran\"                             #>  [75] \"Maldives\"                         \"Nepal\"                            #>  [77] \"Pakistan\"                         \"Sri Lanka\"                        #>  [79] \"Brunei\"                           \"Cambodia\"                         #>  [81] \"Indonesia\"                        \"Laos\"                             #>  [83] \"Malaysia\"                         \"Myanmar (Burma)\"                  #>  [85] \"Philippines\"                      \"Singapore\"                        #>  [87] \"Thailand\"                         \"Timor-Leste\"                      #>  [89] \"Vietnam\"                          \"Armenia\"                          #>  [91] \"Azerbaijan\"                       \"Bahrain\"                          #>  [93] \"Cyprus\"                           \"Georgia\"                          #>  [95] \"Iraq\"                             \"Israel\"                           #>  [97] \"Jordan\"                           \"Kuwait\"                           #>  [99] \"Lebanon\"                          \"Oman\"                             #> [101] \"Qatar\"                            \"Saudi Arabia\"                     #> [103] \"Palestinian Territories\"          \"Syria\"                            #> [105] \"Turkey\"                           \"United Arab Emirates\"             #> [107] \"Yemen\"                            \"Belarus\"                          #> [109] \"Bulgaria\"                         \"Czechia\"                          #> [111] \"Hungary\"                          \"Poland\"                           #> [113] \"Moldova\"                          \"Romania\"                          #> [115] \"Russia\"                           \"Slovakia\"                         #> [117] \"Ukraine\"                          \"Denmark\"                          #> [119] \"Estonia\"                          \"Finland\"                          #> [121] \"Iceland\"                          \"Ireland\"                          #> [123] \"Latvia\"                           \"Lithuania\"                        #> [125] \"Norway\"                           \"Sweden\"                           #> [127] \"United Kingdom\"                   \"Albania\"                          #> [129] \"Bosnia & Herzegovina\"             \"Croatia\"                          #> [131] \"Greece\"                           \"Italy\"                            #> [133] \"Malta\"                            \"Montenegro\"                       #> [135] \"Portugal\"                         \"Serbia\"                           #> [137] \"Slovenia\"                         \"Spain\"                            #> [139] \"North Macedonia\"                  \"Austria\"                          #> [141] \"Belgium\"                          \"France\"                           #> [143] \"Germany\"                          \"Luxembourg\"                       #> [145] \"Netherlands\"                      \"Switzerland\"                      #> [147] \"Antigua & Barbuda\"                \"Aruba\"                            #> [149] \"Bahamas\"                          \"Barbados\"                         #> [151] \"Cuba\"                             \"Curaçao\"                          #> [153] \"Dominican Republic\"               \"Grenada\"                          #> [155] \"Guadeloupe\"                       \"Haiti\"                            #> [157] \"Jamaica\"                          \"Martinique\"                       #> [159] \"Puerto Rico\"                      \"St. Lucia\"                        #> [161] \"St. Vincent & Grenadines\"         \"Trinidad & Tobago\"                #> [163] \"U.S. Virgin Islands\"              \"Belize\"                           #> [165] \"Costa Rica\"                       \"El Salvador\"                      #> [167] \"Guatemala\"                        \"Honduras\"                         #> [169] \"Mexico\"                           \"Nicaragua\"                        #> [171] \"Panama\"                           \"Argentina\"                        #> [173] \"Bolivia\"                          \"Brazil\"                           #> [175] \"Chile\"                            \"Colombia\"                         #> [177] \"Ecuador\"                          \"French Guiana\"                    #> [179] \"Guyana\"                           \"Paraguay\"                         #> [181] \"Peru\"                             \"Suriname\"                         #> [183] \"Uruguay\"                          \"Venezuela\"                        #> [185] \"Canada\"                           \"United States\"                    #> [187] \"Australia\"                        \"New Zealand\"                      #> [189] \"Fiji\"                             \"New Caledonia\"                    #> [191] \"Papua New Guinea\"                 \"Solomon Islands\"                  #> [193] \"Vanuatu\"                          \"Guam\"                             #> [195] \"Kiribati\"                         \"Micronesia (Federated States of)\" #> [197] \"French Polynesia\"                 \"Samoa\"                            #> [199] \"Tonga\""},{"path":[]},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"breaking-changes-development-version","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"socialmixr (development version)","text":"contact_matrix(counts = TRUE)$matrix now array rather xtabs object. matches existing output format contact_matrix(counts = FALSE)$matrix (#118).","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"socialmixr (development version)","text":"bug fixed leading excess contacts NA age lowest age group start 0.","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-040","dir":"Changelog","previous_headings":"","what":"socialmixr 0.4.0","title":"socialmixr 0.4.0","text":"CRAN release: 2024-10-18 speed loading surveys increased. error fixed causing NA contact matrices 5-year age band population data missing. Results function calls accessing Zenodo repository now cached speedup avoid multiple web requests bug fixed ages given ranges set average estimated ones limits_to_agegroups changed return bracket notated age ranges default","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-032","dir":"Changelog","previous_headings":"","what":"socialmixr 0.3.2","title":"socialmixr 0.3.2","text":"CRAN release: 2024-04-18 error list_surveys() fixed stopped working. contact_matrix() updated accept survey objects, DOIs matches documentation. still possible get contact matrix DOI necessary go get_survey() function. ```r # longer works! contact_matrix(“10.5281/zenodo.1095664”) CRAN release: 2024-04-18 get_survey(“10.5281/zenodo.1095664”) |> contact_matrix() efficiency contact_matrix() improved.","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-031","dir":"Changelog","previous_headings":"","what":"socialmixr 0.3.1","title":"socialmixr 0.3.1","text":"CRAN release: 2023-10-26 Tests updated prevent failures due machine precision issues platforms (#100)","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-030","dir":"Changelog","previous_headings":"","what":"socialmixr 0.3.0","title":"socialmixr 0.3.0","text":"CRAN release: 2023-10-18","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"major--breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Major & breaking changes","title":"socialmixr 0.3.0","text":"cite function deprecated replaced get_citation (#84). columns argument removed check.survey() (#81).","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"internal-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"socialmixr 0.3.0","text":"Code quality now ensured continuous integration lintr package (#69). Cyclomatic complexity download_survey() reduced externalising find_common_prefix() function failing early instead relying unnecessary /else sequences generous filename checks now pass files named e.g. “…_participants_common…” “…participant_common…” package now sets custom user agent downloading survey data (#82). problem fixed attempted joins files lead blowing memory use (#75). problem fixed updated Zenodo API caused downloading fail (#91). problem fixed updated Zenodo API caused listing surveys fail (#96).","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-020","dir":"Changelog","previous_headings":"","what":"socialmixr 0.2.0","title":"socialmixr 0.2.0","text":"CRAN release: 2022-10-27","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"major--breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major & breaking changes","title":"socialmixr 0.2.0","text":"error argument removed check() always return warnings. want turn warnings errors, please look options(warn = 2) quiet argument removed check(), cite(), contact_matrix(), get_survey(). want silence diagnostic messages, use R idiomatic mechanisms, suppressMessages() n bootstrap options contact_matrix() deprecated replaced sample.participants argument; bootstrapping now explained vignette instead new matrix_plot() function plot contact matrix use weights improved corresponding section vignette expanded","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"socialmixr 0.2.0","text":"world population data updated 2017 switching wpp2015 wpp2017 package chkDots() now used ensure argument silently ignored S3 methods","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"internal-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"socialmixr 0.2.0","text":"continuous integration now done via GitHub Actions improved robustness survey loading cleaning get_survey() split separate functions downloading processing survey data","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-018","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.8","title":"socialmixr 0.1.8","text":"CRAN release: 2020-11-14 fixed test fixed order limits reduce_agegroups","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-017","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.7","title":"socialmixr 0.1.7","text":"CRAN release: 2020-08-06 fixed bug age given range, age.limits contains ages represented data limits_to_agegroups now returns ordered list (thanks @pearsonca) now allows estimated participant age (thanks @jarvisc1) fixed bug calculating weights (thanks @alxsrobert)","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-016","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.6","title":"socialmixr 0.1.6","text":"CRAN release: 2020-01-10 access Zenodo fails informative error message now given tests require access Zenodo now fail accessed fixed bug interpreting return values Zenodo API","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-015","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.5","title":"socialmixr 0.1.5","text":"CRAN release: 2019-09-24 removed option call survey number - use DOI reproducibility","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-014","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.4","title":"socialmixr 0.1.4","text":"CRAN release: 2019-07-24 better work missing diverse data (e.g., age factors) ‘get_survey’ now works URLs fixed ‘list_surveys’ return latest version data set small fixes","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-013","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.3","title":"socialmixr 0.1.3","text":"CRAN release: 2018-08-09 improved handling DOIs fixed usage weights consistency checks tests performance improvements weighting ‘pop_age’ can now called user","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-012","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.2","title":"socialmixr 0.1.2","text":"CRAN release: 2018-02-22 improved downloading form Zenodo; single download used now improved handling country names fixed bugs “filter” option POLYMOD data set updated latest v1.1 allow user choose ages estimated age ranges","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-011","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.1","title":"socialmixr 0.1.1","text":"CRAN release: 2018-01-15 fix: dependency R >= 3.4.0 updated reference handling survey pulled Zenodo ‘survey’ function can now used create ‘survey’ object data frames small patches fixes","code":""},{"path":"https://epiforecasts.io/socialmixr/news/index.html","id":"socialmixr-010","dir":"Changelog","previous_headings":"","what":"socialmixr 0.1.0","title":"socialmixr 0.1.0","text":"CRAN release: 2018-01-08 initial release","code":""}]
