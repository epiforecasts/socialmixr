name: socialmixr-survey-check

on:
  push:
    branches:
      - main
      - master
    paths:
    # Run when the workflow, R code, or inst files change
      - '.github/workflows/check-surveys.yaml'
      - 'R/**'
      - 'inst/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - '.github/workflows/check-surveys.yaml'
      - 'R/**'
      - 'inst/**'
  schedule:
    - cron: '0 6 1 * *'  # Run monthly on the 1st at 06:00 UTC
  workflow_dispatch:

concurrency:
  group: check-surveys-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-surveys:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write  # Allow creating/updating issues if errors are found
    timeout-minutes: 180  # 3 hours
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: 'release'

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::socialmixr
            any::here
            any::purrr
            any::devtools
            any::sessioninfo
            any::glue
            any::cli
            local::.
          cache-version: 1

      - name: Download survey files
        run: Rscript inst/dev/dl_all_surveys.r

      - name: Check survey files
        run: Rscript inst/dev/check_all_surveys.r

      - name: Upload survey files as artifacts
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if checks failed
        with:
          name: survey-files
          path: surveys/
          retention-days: 30
          if-no-files-found: warn

      - name: Upload check results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: check-results
          path: surveys/check_summary.rds
          retention-days: 90
          if-no-files-found: warn

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            // Try to read the summary file if it exists
            let summaryContent = "Check summary not available";
            try {
              // This is a simplified approach - in practice you might want to
              // parse the RDS file or create a text summary in the R step
              summaryContent = "Survey checks failed. Please check the workflow logs and artifacts for details.";
            } catch (error) {
              console.log("Could not read summary file");
            }

            const issueTitle = `Survey Check Failure - ${new Date().toISOString().split('T')[0]}`;
            const issueBody = `
            ## Survey Check Failed

            The automated survey check workflow failed on ${new Date().toISOString()}.

            **Details:**
            ${summaryContent}

            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            **Artifacts:**
            - Survey files and check results are available in the workflow artifacts

            Please investigate the failure and resolve any issues with the survey data or checking process.

            ---
            *This issue was automatically created by the survey-check workflow.*
            `;

            // Check if there's already an open issue for survey failures
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'survey-check-failure'
            });

            if (existingIssues.data.length === 0) {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: ['survey-check-failure', 'automated']
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssues.data[0].number,
                body: `## New Failure Detected\n\n${issueBody}`
              });
            }

      - name: Session info
        shell: Rscript {0}
        if: always()
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
